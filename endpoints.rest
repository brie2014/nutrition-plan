// Returns array of all the food items
GET http://localhost:8080/food

// Returns a single food item by food id 
GET http://localhost:8080/food/:foodId
# Example food id: 62326b5bc563adc8d8ec32e6 (steak in this case)
# Example of returned data
# "food": {
#     "_id": "62326b5bc563adc8d8ec32e6",
#     "calories": "679",
#     "name": "steak",
#     "description": "so juicy!",
#     "imageURL": ""
# }

// Adds a single food item **INCOMPLETE**
POST http://localhost:8080/food/add-food
{
    "calories": "Put number",
    "name": "Put name",
    "description": "Put description",
    "imageURL": ""
}

// Sign up as a user 
PUT http://localhost:8080/auth/signup
{
    "email": "test@email.com",
    "name": "Bri",
    "password": "password"
}

// Login as a user
POST http://localhost:8080/auth/login
{
    "email": "test@email.com",
    "password": "password"
}
/* Returns a token and userId
{"token":"tokenExample123","userId":"userIdExample123"}

Token and userId can then be stored on client (such as in local storage)
Also set an expiration for the token

Send token in headers with requests that require authorization
headers: {Authorization: `Bearer ${token}` } */